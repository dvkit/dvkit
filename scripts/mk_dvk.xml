<project name="mk_dvk">

	
	<property environment="env"/>
	<property file="${basedir}/packages.properties"/>
	
	
	<property file="${basedir}/mk_dvk.properties"/>
	<property file="${basedir}/mk_dvk_${os}.properties"/>

	<condition property="is_win">
		<os family="windows"/>
	</condition>

	<condition property="build_ws" value="win32" else="gtk">
		<os family="windows"/>
	</condition>
	<condition property="build_arch" value="x86_64" else="x86">
		<os arch="amd64"/>
	</condition>		

	<property name="dvk_srcdir" value="${basedir}/../dvkit"/>
	
	<property name="buildRoot" location="${basedir}/../buildRoot"/>
	<property name="buildRun" location="${buildRoot}/buildRun"/>
	<property name="build" location="${buildRoot}/build"/>
	<property name="buildResult" location="${basedir}/../buildResult"/>
	
	<property name="eclipse.home" location="${buildRoot}/eclipse"/>
	<condition property="eclipsec" 
		value="${eclipse.home}/eclipsec" 
		else="${eclipse.home}/eclipse">
		<os family="windows"/>
	</condition>

	<condition property="eclipse_tgz"
		value="${eclipse_linux_x86_64_tgz}"
		else="${eclipse_linux_tgz}">
		<os arch="amd64"/>
	</condition>
	
	<target name="mk_dvk" depends="mk_dvk-pre">
		<delete dir="${buildRun}"/> 
		<mkdir dir="${buildRun}"/> 
		<delete dir="${build}"/> 
		<mkdir dir="${build}"/> 
		<property name="baseLocation" value="${eclipse.home}"/>
		
		
		<copy todir="${build}">
			<fileset dir="${dvk_srcdir}">
				<include name="plugins/**"/>
				<include name="features/**"/>
				<exclude name="**/*.svn/**"/>
				<exclude name="**/*.git/**"/>
			</fileset>
		</copy>
		<copy todir="${build}" overwrite="true">
			<fileset dir="${dvk_srcdir}">
				<include name="features/**/*.xml"/>
				<include name="features/**/*.product"/>
				<include name="plugins/**/*.xml"/>
				<include name="plugins/**/*.MF"/>
				<include name="plugins/**/*.properties"/>
			</fileset>
			<filterset begintoken="1" endtoken="3">
				<filter token=".2." value="${feature.version}"/>
			</filterset>
		</copy>
		
		<!--
		<unzip dest="${sveditor}/eclipse">
			<fileset dir="${buildResult}">
				<include name="sveditor-feature-${feature.version}.zip"/>
			</fileset>
		</unzip> 
		  -->
		
		<copy file="${basedir}/mk_dvk_1.xml" todir="${buildRun}"/>
		<ant antfile="${buildRun}/mk_dvk_1.xml" dir="${buildRun}"/>

		<copy todir="${buildResult}">
			<fileset dir="${build}/I.dvk">
				<include name="*.zip"/>
			</fileset>
		</copy>

		<antcall target="win_zip"/>
		<antcall target="linux_zip"/>
	</target>
	
	<target name="mk_dvk-pre">
		<!--
		<delete dir="${buildRoot}"/>
		  -->
		<mkdir dir="${buildRoot}"/>
	
		<!--
		<antcall target="linux_unpack_eclipse"/>
		<antcall target="windows_unpack_eclipse"/>
		  -->
		
		<mkdir dir="${buildRoot}/zest"/>
		<unzip dest="${buildRoot}/zest">
			<fileset dir="${basedir}/../packages">
				<include name="${zest_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/cdt"/>
		<unzip dest="${buildRoot}/cdt">
			<fileset dir="${basedir}/../packages">
				<include name="${cdt_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/dltk"/>
		<unzip dest="${buildRoot}/dltk">
			<fileset dir="${basedir}/../packages">
				<include name="${dltk_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/vrapper"/>
		<unzip dest="${buildRoot}/vrapper">
			<fileset dir="${basedir}/../packages">
				<include name="${vrapper_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/sveditor"/>
		<unzip dest="${buildRoot}/sveditor">
			<fileset dir="${basedir}/../packages">
				<include name="${sveditor_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/emf"/>
		<unzip dest="${buildRoot}/emf">
			<fileset dir="${basedir}/../packages">
				<include name="${emf_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/deltapack"/>
		<unzip dest="${buildRoot}/deltapack">
			<fileset dir="${basedir}/../packages">
				<include name="${eclipse_delta_pack_zip}"/>
			</fileset>
		</unzip>
				
	</target>

	<!--
	<target name="linux_unpack_eclipse" unless="${is_win}">
		<exec executable="tar" dir="${buildRoot}" failonerror="true">
			<arg value="xvf"/>
			<arg value="${basedir}/../packages/${eclipse_tgz}"/>
		</exec>
	</target>
	
	<target name="windows_unpack_eclipse" if="${is_win}">
	</target>
	  -->
	
	<target name="win_zip" if="is_win">
		<antcall target="install_addins">
			<param name="c_os" value="win32"/>
			<param name="c_ws" value="win32"/>
			<param name="c_arch" value="x86"/>
		</antcall>

		<antcall target="install_addins">
			<param name="c_os" value="win32"/>
			<param name="c_ws" value="win32"/>
			<param name="c_arch" value="x86_64"/>
		</antcall>
	</target>

	<target name="linux_zip" unless="is_win">
		<antcall target="install_addins">
			<param name="c_os" value="linux"/>
			<param name="c_ws" value="gtk"/>
			<param name="c_arch" value="x86_64"/>
		</antcall>

		<antcall target="install_addins">
			<param name="c_os" value="linux"/>
			<param name="c_ws" value="gtk"/>
			<param name="c_arch" value="x86"/>
		</antcall>
	</target>	

	<macrodef name="install">
		<attribute name="installIU"/>
		<attribute name="repository"/>
		<attribute name="tag"/>
	
		<sequential>
		<exec executable="${eclipsec}" failonerror="true">
			<arg value="-console"/>
			<arg value="-consoleLog"/>
			<arg value="-nosplash"/>
			<arg value="-application"/>
			<arg value="org.eclipse.equinox.p2.director"/>
			<arg value="-installIU"/>
			<arg value="@{installIU}"/>
			<arg value="-repository"/>
			<arg value="@{repository}"/>
			<arg value="-tag"/>
			<arg value="@{tag}"/>
			<arg value="-destination"/>
			<arg value="${buildResult}/dvk-${dvk_version}"/>
		</exec>
		</sequential>
	</macrodef>
	
	<target name="install_addins">
		<delete dir="${buildResult}/dvk-${dvk_version}"/>
		<unzip dest="${buildResult}" 
                    src="${buildResult}/dvk-${c_os}.${c_ws}.${c_arch}.zip"/>
		
		<install installIU="org.eclipse.draw2d.feature.group,org.eclipse.zest.feature.group"
			tag="AddZEST"
			repository="file://${basedir}/../buildRoot/zest"/>
		
		<install installIU="org.eclipse.cdt.feature.group"
			tag="AddCDT"
			repository="file://${basedir}/../buildRoot/cdt"/>
	
		<install installIU="org.eclipse.emf.databinding.feature.group"
			tag="AddEMF"
			repository="file://${basedir}/../buildRoot/emf"/>
		
		<install installIU="org.eclipse.dltk.tcl.feature.group"
			tag="AddTCL"
			repository="file://${basedir}/../buildRoot/dltk"/>
		
		<install installIU="net.sourceforge.vrapper.feature.group,net.sourceforge.vrapper.eclipse.cdt.feature.feature.group,net.sourceforge.vrapper.plugin.ipmotion.feature.group,net.sourceforge.vrapper.plugin.surround.feature.group"
			tag="AddVrapper"
			repository="file://${basedir}/../buildRoot/vrapper"/>
		
		<install installIU="net.sf.sveditor.feature.group"
			tag="AddSVEditor"
			repository="file://${basedir}/../buildRoot/sveditor"/>

		<delete file="${buildResult}/dvk-${c_os}.${c_ws}.${c_arch}.zip"/>
		<antcall target="tar_unix"/>
		<antcall target="zip_windows"/>
		<delete dir="${buildResult}/dvk-${dvk_version}"/>
	</target>

	<target name="tar_unix" unless="is_win">
		<exec executable="chmod" dir="${buildResult}/dvk-${dvk_version}">
			<arg value="+x"/>
			<arg value="dvk"/>
		</exec>
		<exec executable="tar" dir="${buildResult}" failonerror="true">
			<arg value="czf"/>
			<arg value="dvk-${dvk_version}-${c_os}_${c_arch}.tar.gz"/>
			<arg value="dvk-${dvk_version}"/>
		</exec>
	</target>

	<target name="zip_windows" if="is_win">
		<zip destfile="${buildResult}/dvk-${sve_version}-${c_os}_${c_arch}.zip"
			basedir="${buildResult}" includes="dvk-${dvk_version}/**">
		</zip>
	</target>
	
</project>