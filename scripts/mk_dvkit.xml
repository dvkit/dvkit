<project name="mk_dvkit">

	
	<property environment="env"/>
	<property file="${basedir}/packages.properties"/>
	<property file="${basedir}/../etc/dvkit_info.properties"/>
	
	<condition property="is_win">
		<os family="windows"/>
	</condition>

	<condition property="build_ws" value="win32" else="gtk">
		<os family="windows"/>
	</condition>
	<condition property="build_arch" value="x86_64" else="x86">
		<os arch="amd64"/>
	</condition>		

	<property name="dvkit_srcdir" value="${basedir}/../dvkit"/>
	
	<property name="buildRoot" location="${basedir}/../buildRoot"/>
	<property name="buildRun" location="${buildRoot}/buildRun"/>
	<property name="build" location="${buildRoot}/build"/>
	<property name="buildResult" location="${basedir}/../buildResult"/>
	<property name="builder" value="${buildRoot}/builder"/>
	<property name="installerTmp" value="${basedir}/../installerTmp"/>

	<property file="${basedir}/mk_dvkit.properties"/>
	<property file="${basedir}/mk_dvkit_${os}.properties"/>
	
	<property name="eclipse.home" location="${buildRoot}/eclipse"/>
	<condition property="eclipsec" 
		value="${eclipse.home}/eclipsec" 
		else="${eclipse.home}/eclipse">
		<os family="windows"/>
	</condition>

	<condition property="eclipse_tgz"
		value="${eclipse_linux_x86_64_tgz}"
		else="${eclipse_linux_tgz}">
		<os arch="amd64"/>
	</condition>
	
	<target name="mk_dvkit" depends="mk_dvkit-pre">
		<delete dir="${buildRun}"/> 
		<mkdir dir="${buildRun}"/> 
		<delete dir="${build}"/> 
		<mkdir dir="${build}"/> 
		<property name="baseLocation" value="${eclipse.home}"/>
		
		
		<copy todir="${build}">
			<fileset dir="${dvkit_srcdir}">
				<include name="plugins/**"/>
				<include name="features/**"/>
				<exclude name="**/*.svn/**"/>
				<exclude name="**/*.git/**"/>
			</fileset>
		</copy>
		<copy todir="${build}" overwrite="true">
			<fileset dir="${dvkit_srcdir}">
				<include name="features/**/*.xml"/>
				<include name="features/**/*.product"/>
				<include name="plugins/**/*.xml"/>
				<include name="plugins/**/*.MF"/>
				<include name="plugins/**/*.properties"/>
			</fileset>
			<filterset begintoken="1" endtoken="3">
				<filter token=".2." value="${feature.version}"/>
			</filterset>
		</copy>
		
		<!--
		<unzip dest="${sveditor}/eclipse">
			<fileset dir="${buildResult}">
				<include name="sveditor-feature-${feature.version}.zip"/>
			</fileset>
		</unzip> 
		  -->
		
		<copy file="${basedir}/mk_dvkit_1.xml" todir="${buildRun}"/>
		<ant antfile="${buildRun}/mk_dvkit_1.xml" dir="${buildRun}"/>

		<copy todir="${buildResult}">
			<fileset dir="${build}/I.dvkit">
				<include name="*.zip"/>
			</fileset>
		</copy>

		<antcall target="win_zip"/>
		<antcall target="linux_zip"/>
		
		<antcall target="mk_msi"/>
		<antcall target="mk_deb"/>
	</target>
		
	<target name="mk_msi" if="is_win">
		<delete dir="${installerTmp}"/>
		<mkdir dir="${installerTmp}"/>
		<unzip dest="${installerTmp}">
			<fileset dir="${buildResult}">
				<include name="dvkit-${dvkit_version}-${os}_x86_64.zip"/>
			</fileset>
		</unzip>
		<ant antfile="${basedir}/mk_msi.xml" 
			dir="${installerTmp}/dvkit-${dvkit_version}" inheritall="false">
			<property name="script.dir" value="${basedir}"/>
			<property name="etc.dir" value="${basedir}/../etc"/>
			<property name="ProgramFilesFolder" 
				value="ProgramFiles64Folder"/>
			<property name="dest" 
				value="${buildResult}/dvkit-${dvkit_version}-x64.msi"/>
			<property name="arch" value="x64"/>
			<property name="Win64" value="yes"/>
		</ant>
		<delete dir="${installerTmp}"/>
		<mkdir dir="${installerTmp}"/>
		<unzip dest="${installerTmp}">
			<fileset dir="${buildResult}">
				<include name="dvkit-${dvkit_version}-${os}_x86.zip"/>
			</fileset>
		</unzip>
		<ant antfile="${basedir}/mk_msi.xml" 
			dir="${installerTmp}/dvkit-${dvkit_version}" inheritall="false">
			<property name="script.dir" value="${basedir}"/>
			<property name="etc.dir" value="${basedir}/../etc"/>
			<property name="dest" 
				value="${buildResult}/dvkit-${dvkit_version}-x86.msi"/>
			<property name="arch" value="x86"/>
			<property name="Win64" value="no"/>
		</ant>
	</target>
	
	<target name="mk_deb" unless="is_win">
		<ant antfile="${basedir}/mk_deb.xml" inheritall="false">
			<property name="arch" value="x86"/>
			<property name="deb_arch" value="i386"/>
		</ant>
		<ant antfile="${basedir}/mk_deb.xml" inheritall="false">
			<property name="arch" value="x86_64"/>
			<property name="deb_arch" value="amd64"/>
		</ant>		
	</target>
	
	<target name="mk_dvkit-pre">
		<!--
		<delete dir="${buildRoot}"/>
		  -->
		<mkdir dir="${buildRoot}"/>
	
		<!--
		<antcall target="linux_unpack_eclipse"/>
		<antcall target="windows_unpack_eclipse"/>
		  -->
		
		<mkdir dir="${buildRoot}/zest"/>
		<unzip dest="${buildRoot}/zest">
			<fileset dir="${basedir}/../packages">
				<include name="${zest_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/cdt"/>
		<unzip dest="${buildRoot}/cdt">
			<fileset dir="${basedir}/../packages">
				<include name="${cdt_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/jdt"/>
		<unzip dest="${buildRoot}/jdt">
			<fileset dir="${basedir}/../packages">
				<include name="${jdt_zip}"/>
			</fileset>
		</unzip>

		<mkdir dir="${buildRoot}/wst"/>
		<unzip dest="${buildRoot}/wst">
			<fileset dir="${basedir}/../packages">
				<include name="${wst_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/dltk"/>
		<unzip dest="${buildRoot}/dltk">
			<fileset dir="${basedir}/../packages">
				<include name="${dltk_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/vrapper"/>
		<unzip dest="${buildRoot}/vrapper">
			<fileset dir="${basedir}/../packages">
				<include name="${vrapper_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/sveditor"/>
		<unzip dest="${buildRoot}/sveditor">
			<fileset dir="${basedir}/../packages">
				<include name="${sveditor_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/elt"/>
		<unzip dest="${buildRoot}/elt">
			<fileset dir="${basedir}/../packages">
				<include name="${elt_zip}"/>
			</fileset>
		</unzip>
				
		<mkdir dir="${buildRoot}/linuxtools"/>
		<unzip dest="${buildRoot}/linuxtools">
			<fileset dir="${basedir}/../packages">
				<include name="${linuxtools_zip}"/>
			</fileset>
		</unzip>
					
		<mkdir dir="${buildRoot}/shelled"/>
		<unzip dest="${buildRoot}/shelled">
			<fileset dir="${basedir}/../packages">
				<include name="${shelled_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/emf"/>
		<unzip dest="${buildRoot}/emf">
			<fileset dir="${basedir}/../packages">
				<include name="${emf_zip}"/>
			</fileset>
		</unzip>
		
		<mkdir dir="${buildRoot}/deltapack"/>
		<unzip dest="${buildRoot}/deltapack">
			<fileset dir="${basedir}/../packages">
				<include name="${eclipse_delta_pack_zip}"/>
			</fileset>
		</unzip>
				
	</target>

	<!--
	<target name="linux_unpack_eclipse" unless="${is_win}">
		<exec executable="tar" dir="${buildRoot}" failonerror="true">
			<arg value="xvf"/>
			<arg value="${basedir}/../packages/${eclipse_tgz}"/>
		</exec>
	</target>
	
	<target name="windows_unpack_eclipse" if="${is_win}">
	</target>
	  -->
	
	<target name="win_zip" if="is_win">
		<antcall target="install_addins">
			<param name="c_os" value="win32"/>
			<param name="c_ws" value="win32"/>
			<param name="c_arch" value="x86"/>
		</antcall>

		<antcall target="install_addins">
			<param name="c_os" value="win32"/>
			<param name="c_ws" value="win32"/>
			<param name="c_arch" value="x86_64"/>
		</antcall>
	</target>

	<target name="linux_zip" unless="is_win">
		<antcall target="install_addins">
			<param name="c_os" value="linux"/>
			<param name="c_ws" value="gtk"/>
			<param name="c_arch" value="x86_64"/>
		</antcall>

		<antcall target="install_addins">
			<param name="c_os" value="linux"/>
			<param name="c_ws" value="gtk"/>
			<param name="c_arch" value="x86"/>
		</antcall>
	</target>	

	<macrodef name="install">
		<attribute name="installIU"/>
		<attribute name="repository"/>
		<attribute name="tag"/>
	
		<sequential>
		<exec executable="${eclipsec}" failonerror="true">
			<arg value="-console"/>
			<arg value="-consoleLog"/>
			<arg value="-nosplash"/>
			<arg value="-application"/>
			<arg value="org.eclipse.equinox.p2.director"/>
			<arg value="-installIU"/>
			<arg value="@{installIU}"/>
			<arg value="-repository"/>
			<arg value="@{repository}"/>
			<arg value="-tag"/>
			<arg value="@{tag}"/>
			<arg value="-destination"/>
			<arg value="${buildResult}/dvkit-${dvkit_version}"/>
		</exec>
		</sequential>
	</macrodef>
	
	<target name="install_addins">
		<delete dir="${buildResult}/dvkit-${dvkit_version}"/>
		<unzip dest="${buildResult}" 
                    src="${buildResult}/dvkit-${c_os}.${c_ws}.${c_arch}.zip"/>
		
		<install installIU="org.eclipse.gef.feature.group,
			org.eclipse.draw2d.feature.group,
			org.eclipse.zest.feature.group"
			tag="AddZEST"
			repository="file://${basedir}/../buildRoot/zest"/>
		
		<install installIU="org.eclipse.cdt.feature.group"
			tag="AddCDT"
			repository="file://${basedir}/../buildRoot/cdt"/>
	
		<!-- JDT is required by the JavaScript editor -->
		<install installIU="org.eclipse.jdt.feature.group"
			tag="AddJDT"
			repository="file://${basedir}/../buildRoot/jdt"/>

		<install installIU="org.eclipse.emf.databinding.feature.group,
							org.eclipse.emf.edit.feature.group,
							org.eclipse.xsd.edit.feature.group,
							org.eclipse.emf.edit.ui.feature.group,
							org.eclipse.emf.ecore.edit.feature.group"
			tag="AddEMF"
			repository="file://${basedir}/../buildRoot/emf"/>
	
		<!-- XML/JavaScript tools depend on:
		  - JDT 
		  - EMF
		  -->
		<install 
                        installIU="org.eclipse.wst.xml_ui.feature.feature.group,
                                   org.eclipse.wst.jsdt.feature.feature.group"
			tag="AddWST"
			repository="file://${basedir}/../buildRoot/wst"/>
	
		
		<install installIU="org.eclipse.dltk.tcl.feature.group"
			tag="AddTCL"
			repository="file://${basedir}/../buildRoot/dltk"/>
		
		<install installIU="net.sourceforge.vrapper.feature.group,net.sourceforge.vrapper.eclipse.cdt.feature.feature.group,net.sourceforge.vrapper.plugin.ipmotion.feature.group,net.sourceforge.vrapper.plugin.surround.feature.group"
			tag="AddVrapper"
			repository="file://${basedir}/../buildRoot/vrapper"/>
		
		<install installIU="net.sf.sveditor.feature.group"
			tag="AddSVEditor"
			repository="file://${basedir}/../buildRoot/sveditor"/>
		
		<antcall target="install_elt"/>
				
				<!--
		<install installIU="org.eclipse.linuxtools.cdt.libhover.feature.feature.group,org.eclipse.linuxtools.man.feature.group"
			tag="AddLinuxTools"
			repository="file://${basedir}/../buildRoot/linuxtools/archive/releng/org.eclipse.linuxtools.releng-site/target/repository"/>
			
		<install installIU="org.eclipse.linuxtools.cdt.libhover.feature.feature.group,org.eclipse.linuxtools.man.feature.group"
			tag="AddLinuxTools"
			repository="file://${basedir}/../buildRoot/linuxtools/archive/releng/org.eclipse.linuxtools.releng-site/target/repository"/>
			   -->

		<install installIU="net.sourceforge.shelled.feature.group"
			tag="AddShellEd"
			repository="file://${basedir}/../buildRoot/shelled"/>

		<delete file="${buildResult}/dvkit-${c_os}.${c_ws}.${c_arch}.zip"/>
		<antcall target="tar_unix"/>
		<antcall target="zip_windows"/>
		<delete dir="${buildResult}/dvkit-${dvkit_version}"/>
	</target>
	
	<!-- Currently, ELT is not supported on Windows -->
	<target name="install_elt" unless="is_win">
		<install installIU="com.google.eclipse.elt.feature.group"
			tag="AddELT"
			repository="file://${basedir}/../buildRoot/elt"/>
	</target>

	<target name="tar_unix" unless="is_win">
		<exec executable="chmod" dir="${buildResult}/dvkit-${dvkit_version}">
			<arg value="+x"/>
			<arg value="dvkit"/>
		</exec>
		<exec executable="tar" dir="${buildResult}" failonerror="true">
			<arg value="czf"/>
			<arg value="dvkit-${dvkit_version}-${c_os}_${c_arch}.tar.gz"/>
			<arg value="dvkit-${dvkit_version}"/>
		</exec>
	</target>

	<target name="zip_windows" if="is_win">
		<zip destfile="${buildResult}/dvkit-${dvkit_version}-${c_os}_${c_arch}.zip"
			basedir="${buildResult}" includes="dvkit-${dvkit_version}/**">
		</zip>
	</target>
	
</project>
